## Redis
REDIS_PORT=6379
REDIS_URL=redis://localhost
REDIS_PASSWORD=YP9dc2U4P4QMtBln1H1T/fmU1GzCm13dkFAnhVuhFeu/o3LpbQrCWcWhqouH+KBCaAv2RW/puDtWrEit

## Mongo
MONGO_PORT=27017
MONGO_URL=mongodb://localhost

## CIPHER to encrypt/decrypt third-party tokens (e.g. Mailgun API key, Blackblaze API key, etc.)
CIPHER_KEY=<Buffer 25 9b 33 f3 14 1d 35 1e 2d 58 25 7d 79 58 30 61 35 05 d3 23 6b 3b 5b 25 62 fb 34 3f 6d 94 a3 6c>
CIPHER_IV_KEY=<Buffer f1 eb a9 43 b6 02 71 4f 8d ac 4b 87 ae b8 fa 06>

## General microservice configuration
NODE_ENV=production
LOGGER_LEVEL=debug

## gateway
GATEWAY_PORT=8080
GATEWAY_DEBUG_PORT=9225
GATEWAY_EXPOSE_FRONTENDS=true      # The gateway proxies back-end services and optionally exposes the front-end applications
CORS_ENABLED=true                  # Enable CORS for the gateway but also for the front-end applications
DOMAIN_URL=http://localhost        # The domain of the application to define CORS in the gateway. Used also to limit the domain of the cookies used for session and refresh tokens 

# The url to access the gateway from the front-end applications
GATEWAY_URL=http://localhost:${GATEWAY_PORT}
# The url to access the gateway from the inside of the docker network
DOCKER_GATEWAY_URL=http://gateway:8080

## authenticator
AUTHENTICATOR_PORT=8000
AUTHENTICATOR_DEBUG_PORT=9226

# Secrets to sign/verify JWT tokens 
AUTHENTICATOR_ACCESS_TOKEN_SECRET = a78e23d15fbc4634abea33983cfbf33d
AUTHENTICATOR_REFRESH_TOKEN_SECRET = a78e23d15fbc4634abea33983cfbf33d
AUTHENTICATOR_RESET_TOKEN_SECRET = c9aa4e32ccc2207f71101fb2766cb514

# The url to access the authenticator from the inside of the docker network
AUTHENTICATOR_URL=http://authenticator:${AUTHENTICATOR_PORT}

## pdfgenerator
PDFGENERATOR_PORT=8300
PDFGENERATOR_DEBUG_PORT=9227
# The url to access the pdfgenerator from the inside of the docker network
PDFGENERATOR_URL=http://pdfgenerator:${PDFGENERATOR_PORT}/pdfgenerator

## emailer
EMAILER_PORT=8400
EMAILER_DEBUG_PORT=9228

# General Mailgun configuration to send emails for forgot password, welcome, etc.
ALLOW_SENDING_EMAILS=true                                 # Set to false to disable sending emails
EMAIL_FROM=belayhun24arage@gmail.com                      # The email address to send emails from
EMAIL_REPLY_TO=belayhun24arage@gmail.com                  # The email address to reply to
EMAIL_BCC=belayhun24arage@gmail.com,arage24belayhun@gmail.com       # The email address to send a copy of the email to
# The url to access the emailer from the inside of the docker network
EMAILER_URL=http://emailer:${EMAILER_PORT}/emailer

## Email delivery configuration
# Mailgun configuration
# MAILGUN_API_KEY=your_api_key                             # Get your API key from https://app.mailgun.com/app/account/security/api_keys
# MAILGUN_DOMAIN=mg.example.com                            # Get your domain from https://app.mailgun.com/app/sending/domains
# Gmail configuration
# GMAIL_EMAIL=your_gmail_address                           # Your Gmail address
# GMAIL_APP_PASSWORD=your_gmail_password                   # Your Gmail app password
# Custom SMTP configuration
#SMTP_SERVER=smtp.gmail.com                               # Your SMTP server
#SMTP_PORT=465                                            # Your SMTP port
#SMTP_SECURE=false                                        # Set to true if your SMTP server uses SSL
#SMTP_USERNAME=belayhun24arage@gmail.com                  # Your SMTP username 
#SMTP_PASSWORD=rctj lnln dgcw pejz                        # Your SMTP password

## api
API_PORT=8200
API_DEBUG_PORT=9229
DEMO_MODE=true    # Set the application in demo mode to use the demo database and a demo user
RESTORE_DB=true   # Set to true to restore the database from the ./backup directory at statup
# The url to access the api from the inside of the docker network
API_URL=http://api:${API_PORT}/api/v2

## tenantapi
TENANTAPI_PORT=8250
TENANTAPI_DEBUG_PORT=9240
# The url to access the api from the inside of the docker network
TENANTAPI_URL=http://tenantapi:${TENANTAPI_PORT}/tenantapi

## resetservice
## /!\ To not add in production just for test purposes
RESETSERVICE_PORT=8900
RESETSERVICE_DEBUG_PORT=9230
# The url to access the resetservice from the inside of the docker network
RESETSERVICE_URL=http://resetservice:${RESETSERVICE_PORT}

## frontend
APP_NAME=MicroRealEstate # The name of the application displayed in the application header
SIGNUP=true              # Enable/disable the signup feature 

## landlord frontend
LANDLORD_FRONTEND_PORT=8180
LANDLORD_BASE_PATH=/landlord
# The url to access the landlord-frontend from the inside of the docker network
LANDLORD_FRONTEND_URL=http://landlord-frontend:${LANDLORD_FRONTEND_PORT}
# The url to access the landlord application from the browser
LANDLORD_APP_URL=${APP_URL}${LANDLORD_BASE_PATH}

## tenant frontend
TENANT_FRONTEND_PORT=8190
TENANT_BASE_PATH=/tenant
# The url to access the tenant-frontend from the inside of the docker network
TENANT_FRONTEND_URL=http://tenant-frontend:${TENANT_FRONTEND_PORT}
# The url to access the tenant application from the browser
TENANT_APP_URL=${APP_URL}${TENANT_BASE_PATH}
